# Transforming dependency property names into user-friendly property names

# Routing
server.port = ${server-port}
servlet.session.cookie.http-only = ${http-only-session-cookie-enabled}

# Authentication (PAM)
authentication.pam.dcvpamhelper-path = ${pam-helper-path:}
authentication.pam.service-name = ${pam-service-name:}
authentication.pam.debug = ${enable-pam-debug:false}
authentication.pam.process-timeout = ${pam-process-timeout:10}
authentication.pam.normalize-userid = ${pam-normalize-userid-enabled:false}
authentication.pam.normalize-userid-command = ${pam-normalize-userid-command:'id --user --name "$0"'}

# Spring Security
spring.security.basic.enabled = ${enable-default-filter-chain}
spring.security.oauth2.authorizationserver.client.oidc-client.registration.client-authentication-methods = ${client-authentication-methods}
spring.security.oauth2.authorizationserver.client.oidc-client.registration.authorization-grant-types = ${authorization-grant-types}
spring.security.oauth2.authorizationserver.client.oidc-client.registration.redirect-uris = ${redirect-uris}
spring.security.oauth2.authorizationserver.client.oidc-client.registration.post-logout-redirect-uris = ${post-logout-redirect-uris}
spring.security.oauth2.authorizationserver.client.oidc-client.registration.scopes = ${registration-scopes}
spring.security.oauth2.authorizationserver.client.oidc-client.token.access-token-time-to-live = ${access-token-time-to-live}
spring.security.oauth2.authorizationserver.issuer = ${authorization-server-hostname}

# Secret Spring Security
spring.security.oauth2.authorizationserver.client.oidc-client.registration.client-id = ${auth-server-client-id}
spring.security.oauth2.authorizationserver.client.oidc-client.registration.client-secret = {noop}${auth-server-client-secret}

# SSL
server.ssl.enabled = ${ssl-enabled:false}
server.ssl.key-store-type = ${ssl-key-store-type}
server.ssl.key-store = ${ssl-key-store}
server.ssl.key-store-password = ${ssl-key-store-password}